import 'dart:math';
import 'package:flutter/material.dart';
import 'package:local_auth/local_auth.dart';
import 'package:shared_preferences/shared_preferences.dart';
import '../controller/user_controller.dart';
import 'ListPageSchedule.dart';

class FingerprintLoginScreen extends StatefulWidget {
  const FingerprintLoginScreen({super.key});

  @override
  State<FingerprintLoginScreen> createState() => _FingerprintLoginScreenState();
}

class _FingerprintLoginScreenState extends State<FingerprintLoginScreen> {
  final LocalAuthentication localAuth = LocalAuthentication();
  bool _authInProgress = true;
  String? _errorMessage;

  @override
  void initState() {
    super.initState();
    _authenticate();
  }

  Future<void> _authenticate() async {
    debugPrint('üîê ÈñãÂßãÊåáÁ¥ãÈ©óË≠âÊµÅÁ®ã...');
    try {
      final bool isSupported = await localAuth.isDeviceSupported();
      final bool canCheck = await localAuth.canCheckBiometrics;
      debugPrint('Ë®≠ÂÇôÊîØÊè¥: $isSupported, ÂèØÊ™¢Êü•ÁîüÁâ©Ëæ®Ë≠ò: $canCheck');

      bool didAuthenticate = false;
      if (isSupported && canCheck) {
        didAuthenticate = await localAuth.authenticate(
          localizedReason: 'Ë´ãÊéÉÊèèÊåáÁ¥ã‰ª•ÁπºÁ∫å',
          options: const AuthenticationOptions(
            biometricOnly: true,
            stickyAuth: true,
          ),
        );
        debugPrint('ÊåáÁ¥ãÈ©óË≠âÁµêÊûú: $didAuthenticate');
      }

      if (didAuthenticate) {
        final prefs = await SharedPreferences.getInstance();

        // üîπ ÁîüÊàêÊñ∞ÁöÑÊàñÂèñÂæóÂ∑≤Â≠òÂú® userId
        int? userId = prefs.getInt('user_id');
        if (userId == null) {
          userId = 100000 + Random().nextInt(900000);
          await prefs.setInt('user_id', userId);
          debugPrint('üîß Áî¢Áîü‰∏¶ÂÑ≤Â≠òÊñ∞ÁöÑ user_id: $userId');
        } else {
          debugPrint('‚úÖ Â∑≤Â≠òÂú® userId: $userId');
        }

        // üîπ ÂÑ≤Â≠òÂà∞Ë≥áÊñôÂ∫´ÔºåÂ¶ÇÊûúÂ∑≤Â≠òÂú®Â∞±Ë∑≥ÈÅé
        try {
          await UserController().saveAUserData(userId);
          debugPrint('‚úÖ UserController Â∑≤Á¢∫Ë™ç userId $userId Âú®Ë≥áÊñôÂ∫´‰∏≠');
        } catch (e) {
          debugPrint('‚ùå UserController saveAUserData Â§±Êïó: $e');
        }

        if (!mounted) return;
        Navigator.of(context).pushReplacement(
          MaterialPageRoute(builder: (_) => ListPageSchedule(userId: userId)),
        );
      } else {
        debugPrint('‚ö†Ô∏è È©óË≠âÂ§±ÊïóÊàñË¢´ÂèñÊ∂à');
        if (mounted) {
          setState(() {
            _authInProgress = false;
            _errorMessage = 'È©óË≠âÂ§±ÊïóÊàñÂ∑≤ÂèñÊ∂à';
          });
        }
      }
    } catch (e) {
      debugPrint('‚ùå È©óË≠âÈåØË™§: $e');
      if (mounted) {
        setState(() {
          _authInProgress = false;
          _errorMessage = 'È©óË≠âÈåØË™§: $e';
        });
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    if (_authInProgress) {
      return const Scaffold(
        backgroundColor: Color(0xFFFBF7EF),
        body: Center(child: CircularProgressIndicator()),
      );
    }

    return Scaffold(
      backgroundColor: const Color(0xFFFBF7EF),
      body: Center(
        child: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            if (_errorMessage != null)
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 8.0),
                child: Text(_errorMessage!, textAlign: TextAlign.center),
              ),
            ElevatedButton(
              onPressed: () {
                setState(() {
                  _authInProgress = true;
                  _errorMessage = null;
                });
                _authenticate();
              },
              child: const Text('ÈáçÊñ∞ÂòóË©¶ÊåáÁ¥ãÈ©óË≠â'),
            ),
            const SizedBox(height: 12),
            TextButton(
              onPressed: () {
                Navigator.of(context).pushReplacement(
                  MaterialPageRoute(builder: (_) => const ListPageSchedule(userId: null)),
                );
              },
              child: const Text('Ë∑≥ÈÅéÈ©óË≠â'),
            ),
          ],
        ),
      ),
    );
  }
}
